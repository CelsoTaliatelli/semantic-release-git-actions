name: Semantic Release

permissions:
  contents: write
  issues: write
  checks: write
  actions: write
  packages: read
  pull-requests: write

on:
  pull_request:
    types: closed
    branches:
        - dev


jobs:
  semantic-release:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"

    name: Semantic Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
    
      - uses: actions/setup-node@v3
        with:
          node-version: "lts/*"

      - name: Prepare prerelease semantic
        if: github.ref != 'refs/heads/main'
        run: mv .releaserc.prerelease.yaml .releaserc.yaml    
      - name: Create Release
        uses: cycjimmy/semantic-release-action@v4
        id: semantic
        with:
            dry_run: true
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Print next version
        run: |
            echo "Next version: ${{ steps.semantic.outputs.new_release_version }}"

      #- name: Create Branch Release
      #  uses: actions/github-script@v7
      #  with:
      #    github-token: ${{secrets.GITHUB_TOKEN}}
      #    script: |
      #      let result = await github.rest.repos.getBranch({
      #          owner: context.repo.owner,
      #          repo: context.repo.repo,
      #          branch: 'main'
      #      })
      #      const { repo, owner } = context.repo;
      #      result = await github.rest.git.createRef({
      #          owner: owner,
      #          repo:  repo,
      #          ref: "refs/heads/release/0.0.2",
      #          sha: result.data.commit.sha
      #        });
      #      const result = await github.rest.pulls.create({
      #          title: '${{github.ref_name}}',
      #          owner: owner,
      #          repo:  repo,
      #          head: 'dev',
      #          state: "open",
      #          base: 'refs/heads/release/0.0.2',
      #          body: [
      #            'This PR is auto-generated by',
      #            '[actions/github-script](https://github.com/actions/github-script).'
      #          ].join('\n')
      #        });
      #        github.rest.issues.addLabels({
      #          owner,
      #          repo,
      #          issue_number: result.data.number,
      #          labels: ['feature', 'automated pr']
      #        });