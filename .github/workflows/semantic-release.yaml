name: Semantic Release

permissions:
  contents: write
  issues: write
  checks: write
  actions: write
  packages: read
  pull-requests: write

on:
  push:
    branches:
        - dev


jobs:
  dry_run_release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
      - run: npm ci # or yarn install
      - run: npx semantic-release --dry-run
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
  semantic-release:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"

    name: Semantic Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - uses: actions/setup-node@v3
        with:
          node-version: "lts/*"

      - name: Create Release
        uses: cycjimmy/semantic-release-action@v4
        id: semantic
        with:
            dry_run: true
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Print next version
        run: |
            echo "Next version: ${{ steps.semantic.outputs.new_release_version }}"

      - name: Create Release
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            let result = await github.rest.repos.getBranch({
                owner: context.repo.owner,
                repo: context.repo.repo,
                branch: 'main'
            })
            const { repo, owner } = context.repo;
            result = await github.rest.git.createRef({
                owner: owner,
                repo:  repo,
                ref: "refs/heads/release-${{steps.semantic.outputs.new_release_version}}",
                sha: result.data.commit.sha
              });